<?xml version="1.0" encoding="utf-8"?>
<project name="FrederickkJS" default="prod" basedir="../">



	<description>FrederickkJS ANT build file</description>



	<target name="-load.properties" description="Set properties for this build">
		<!-- YUI Compressor location -->
		<property name="yui.dir" value="${basedir}/scripts/yuicompressor-2.4.2.jar" />
		<!-- Source Lint/Hint dir -->
		<property name="jslint.js" value="${basedir}/scripts/jslint.js" />
		<!-- Rhino dir -->
		<property name="js.jar" value="${basedir}/scripts/rhino/js.jar"/>
		<!-- JSDoc-Toolkit dir -->
		<property name="jsdoctoolkit.dir" value="/Users/ken.frederick/Documents/Development/java/jsdoc-toolkit" />

		<!-- Source JS dir -->
		<property name="src.dir" value="${basedir}/src" />
		<property name="src.dir.core" value="${basedir}/src/Core/" />
		<property name="src.dir.fio" value="${basedir}/src/FIO/" />
		<property name="src.dir.ftime" value="${basedir}/src/FTime/" />
		<property name="src.dir.f3d" value="${basedir}/src/F3D/" />
		<property name="src.dir.fshape" value="${basedir}/src/FShape/" />
		<property name="src.dir.fcontrol" value="${basedir}/src/FControl/" />

		<!-- Output dir -->
		<property name="distribution.dir" value="${basedir}/distribution" />

		<!-- Output info -->
		<property name="distribution.vers" value="0.1" />
		<property name="distribution.file" value="frederickkPaper" />

		<!-- Documentation dir -->
		<property name="doc.dir" value="${basedir}/docs" />

		<!-- Build version information  -->
		<property name="build.major" value="1" />
		<property name="build.minor" value="1" />
	</target>



	<!-- Create distribution directories -->
	<target name="-init" depends="-load.properties" description="Create distribution directory structure">
		<!-- Create the time stamp for the new distribution -->
		<tstamp>
			<format property="TODAY" pattern="EEE, d MMM yyyy HH:mm:ss Z" />
		</tstamp>
		
		<!-- Delete previous distribution files -->
		<delete dir="${distribution.dir}" />
		
		<!-- Recreate the distribution directories -->
		<mkdir dir="${distribution.dir}" />
		<!-- <mkdir dir="${distribution.dir}/js" /> -->
		
		<!-- Log the distribution timestamps to file -->
		<echo file="${distribution.dir}/timestamp.txt" append="false">Build Date: ${TODAY}</echo>
	</target>



	 <!-- JS Lint -->
	<target depends="-init" name="-js.lint">
		<pathconvert pathsep=" " property="jsfiles">
			<fileset dir="${distribution.dir}/">
				<include name="*.js" />
			</fileset>
		</pathconvert>
		<exec dir="${distribution.dir}/" executable="java" failonerror="true">
			<arg line="-jar ${js.jar} ${jslint.js} ${jsfiles}" />
		</exec>
		<echo>Finished</echo>
	</target>



	<!-- Concatenate JS files -->
	<target name="-js.concatenate" depends="-js.lint" description="Concatenates specified JavaScript files">
		<concat destfile="${distribution.dir}/${distribution.file}.js">
			<fileset dir="${src.dir}" includes="*.js" />
			<fileset dir="${src.dir.core}" includes="*.js" />
			<fileset dir="${src.dir.fio}" includes="*.js" />
			<fileset dir="${src.dir.ftime}" includes="*.js" />
			<fileset dir="${src.dir.f3d}" includes="*.js" />
			<fileset dir="${src.dir.fshape}" includes="*.js" />
			<fileset dir="${src.dir.fcontrol}" includes="*.js" />
		</concat>
		<echo>Finished</echo>
	</target>



	<!-- Minify JS files -->
	<target name="-js.minify" depends="-js.concatenate" description="Minifies JavaScript files">
		<apply executable="java" parallel="false" dest="${distribution.dir}">
			<fileset 
				dir="${distribution.dir}" 
				includes="${distribution.file}.js" />
			<arg line="-jar" />
			<arg path="${yui.dir}" />
			<srcfile/>
			<arg line="-o" />
			<mapper type="glob" from="*.js" to="*.min.js" />
			<targetfile/>
		</apply>
		<echo>Finished</echo>
	</target>



	<!-- Documentation -->
	<target name="-js.docs" description="Generates documentation">
		<sequential>
			<delete dir="${doc.dir}"/>
			<mkdir dir="${doc.dir}" />

			<echo message="Running JSDoc Toolkit"/>

			<!-- The java exe is told to run in the dir where our source files reside.
					 If we instead ran it from the dir that the build file is in and gave it
					 full paths to the source files the documentation would include the full
					 filesystem paths (c:\path\to\source\) instead of relative ones.
					 Since this command is running in the source dir, all of the paths
					 given to it must first traverse down a level (../) to get back to the
					 build file dir.
			-->
			<exec dir="${basedir}" executable="java" failonerror="true">
				<arg line="-jar ${jsdoctoolkit.dir}/jsrun.jar ${jsdoctoolkit.dir}/app/run.js" />

				<!-- -d tells JSDoc toolkit where to output the documentation -->
				<arg line="-d=${doc.dir}" />

				<!-- use the default template -->
				<arg line="-t=${jsdoctoolkit.dir}/templates/jsdoc" />

				<arg line="${distribution.dir}/${distribution.file}.js" />
			</exec>
		</sequential>
		<echo>Finished</echo>
	</target>




	<!-- Build -->
	<target name="prod" 
		description="Builds project files for production use"
		depends="
			-load.properties, 
			-init, 
			-js.concatenate,
			-js.lint, 
			-js.minify,
			-js.docs">
	</target>
</project>
